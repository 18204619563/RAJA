# - RAJA: (David's TO DO)
#
#=== Usage ===================================================================
# This file allows RAJA to be automatically detected by other libraries
# using CMake.  To build with RAJA, you can do one of two things:
#
#   1. Set the RAJA_DIR environment variable to the root of the Caliper
#      installation.  If you loaded RAJA through a dotkit, this may already
#      be set, and RAJA will be autodetected by CMake.
#
#   2. Configure your project with this option:
#      -DRAJA_DIR=<RAJA install prefix>/share/
#
# If you have done either of these things, then CMake should automatically find
# and include this file when you call find_package(RAJA) from your
# CMakeLists.txt file.
#
#=== Components ==============================================================
#
# To link against these, just do, for example:
#
#   find_package(RAJA REQUIRED)
#   add_executable(foo foo.c)
#   target_link_libraries(foo RAJA)
#
# That's all!
#
if (NOT RAJA_CONFIG_LOADED)
  set(RAJA_CONFIG_LOADED TRUE)

  # Install layout
  set(RAJA_INSTALL_PREFIX @CMAKE_INSTALL_PREFIX@)
  set(RAJA_INCLUDE_DIR    @CMAKE_INSTALL_PREFIX@/include)
  set(RAJA_LIB_DIR        @CMAKE_INSTALL_PREFIX@/lib)
  set(RAJA_CMAKE_DIR      @CMAKE_INSTALL_PREFIX@/share/cmake/raja)

  # Includes needed to use RAJA
  set(RAJA_INCLUDE_PATH @CMAKE_INSTALL_PREFIX@/include)
  set(RAJA_LIB_PATH     @CMAKE_INSTALL_PREFIX@/lib)
  set(RAJA_COMPILE_FLAGS "${CMAKE_CXX_FLAGS}")

  set(RAJA_RT_LIBRARIES "${RT_LIBRARIES}")

  set(RAJA_TIMER_TYPE    ${RAJA_TIMER_TYPE})
  set(RAJA_ENABLE_CILK   ${RAJA_ENABLE_CILK})
  set(RAJA_ENABLE_CUDA   ${RAJA_ENABLE_CUDA})
  set(RAJA_ENABLE_FT     ${RAJA_ENABLE_FT})
  set(RAJA_ENABLE_OPENMP ${RAJA_ENABLE_OPENMP})
  set(RAJA_ENABLE_TESTS  ${RAJA_ENABLE_TESTS})
  set(RAJA_REPORT_FT     ${RAJA_REPORT_FT})
  set(RAJA_USE_COMPLEX   ${RAJA_USE_COMPLEX})    
  set(RAJA_USE_DOUBLE    ${RAJA_USE_DOUBLE})
  set(RAJA_USE_FLOAT     ${RAJA_USE_FLOAT})
  # Library targets imported from file
  include(@CMAKE_INSTALL_PREFIX@/share/cmake/raja/RAJA.cmake)
endif()
